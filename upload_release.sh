#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–ª–∏–∑–æ–≤ –Ω–∞ GitHub
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./upload_release.sh <version> <description>

set -e

VERSION=$1
DESCRIPTION=$2

if [ -z "$VERSION" ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <version> <description>"
    echo "–ü—Ä–∏–º–µ—Ä: $0 2.1.0 '–£–ª—É—á—à–µ–Ω–Ω–∞—è OTA —Å–∏—Å—Ç–µ–º–∞'"
    exit 1
fi

if [ -z "$DESCRIPTION" ]; then
    DESCRIPTION="Release $VERSION"
fi

echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ v$VERSION..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ —Å –≤–µ—Ä—Å–∏–µ–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -d "releases/v$VERSION" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ releases/v$VERSION –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .bin —Ñ–∞–π–ª–∞
BIN_FILE="releases/v$VERSION/qctq_relay_firmware_v$VERSION.bin"
if [ ! -f "$BIN_FILE" ]; then
    echo "‚ùå –§–∞–π–ª $BIN_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ release_info.json
INFO_FILE="releases/v$VERSION/release_info.json"
if [ ! -f "$INFO_FILE" ]; then
    echo "‚ùå –§–∞–π–ª $INFO_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo "‚úÖ –§–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã:"
echo "   - $BIN_FILE"
echo "   - $INFO_FILE"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é GitHub CLI
if ! gh auth status >/dev/null 2>&1; then
    echo "üîê –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è GitHub CLI..."
    echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: gh auth login"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º —Ä–µ–ª–∏–∑
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub..."

# –ß–∏—Ç–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ release_info.json
RELEASE_DESCRIPTION=$(cat "$INFO_FILE" | jq -r '.description // empty')
CHANGES=$(cat "$INFO_FILE" | jq -r '.changes[]? // empty' | sed 's/^/- /')

# –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
FULL_DESCRIPTION="## $DESCRIPTION

$RELEASE_DESCRIPTION

### –ò–∑–º–µ–Ω–µ–Ω–∏—è:
$CHANGES

### –§–∞–π–ª—ã:
- \`qctq_relay_firmware_v$VERSION.bin\` - –ø—Ä–æ—à–∏–≤–∫–∞ –¥–ª—è Wemos D1 Mini
- \`release_info.json\` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–ª–∏–∑–µ

### –†–∞–∑–º–µ—Ä: $(stat -f%z "$BIN_FILE") bytes"

# –°–æ–∑–¥–∞–µ–º —Ä–µ–ª–∏–∑
gh release create "v$VERSION" \
    --title "QCTQ Relay Firmware v$VERSION" \
    --notes "$FULL_DESCRIPTION" \
    "$BIN_FILE" \
    "$INFO_FILE"

echo "‚úÖ –†–µ–ª–∏–∑ v$VERSION —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ relay —Å–µ—Ä–≤–µ—Ä–µ
echo "üîó –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ relay —Å–µ—Ä–≤–µ—Ä–µ..."

# –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ release_info.json
SIZE=$(cat "$INFO_FILE" | jq -r '.firmware.size')
CHECKSUM=$(cat "$INFO_FILE" | jq -r '.firmware.checksum')
URL="https://github.com/pl0schadka/qctq/releases/download/v$VERSION/qctq_relay_firmware_v$VERSION.bin"

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
RESPONSE=$(curl -s -X POST "http://84.201.179.109/firmware/register" \
    -H "Content-Type: application/json" \
    -d "{
        \"version\": \"$VERSION\",
        \"url\": \"$URL\",
        \"size\": $SIZE,
        \"checksum\": \"$CHECKSUM\",
        \"description\": \"$RELEASE_DESCRIPTION\"
    }")

if echo "$RESPONSE" | jq -e '.ok' >/dev/null; then
    echo "‚úÖ –ü—Ä–æ—à–∏–≤–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ relay —Å–µ—Ä–≤–µ—Ä–µ!"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: $RESPONSE"
fi

echo ""
echo "üéâ –†–µ–ª–∏–∑ v$VERSION –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤!"
echo "üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤—è—Ç—Å—è –¥–æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏"
echo "üåê –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: http://84.201.179.109/admin"
